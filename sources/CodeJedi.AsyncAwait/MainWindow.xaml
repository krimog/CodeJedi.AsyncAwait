<Window x:Class="CodeJedi.AsyncAwait.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CodeJedi.AsyncAwait"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <DockPanel>
        <StackPanel Orientation="Vertical" DockPanel.Dock="Bottom">
            <Grid Height="30">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Processing.UIThreadId, StringFormat='ID du thread UI : {0:D}'}" />
                <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding Processing.ProcessingThreadId, StringFormat='ID du thread de traitement : {0:D}'}" />
                
                <TextBlock x:Name="ResultTextBlock" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap"
                           Grid.Column="2"/>
            </Grid>
            <Grid Height="30">
                <ProgressBar Minimum="0" Maximum="1" 
                             Value="{Binding Processing.Progress, Mode=OneWay}" />
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="Pas de traitement" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Processing.IsProcessing}" Value="True">
                                    <Setter Property="Text" Value="Traitement en cours..." />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
            <Grid Height="30">
            <ProgressBar IsIndeterminate="True" />
            <TextBlock Text="Si cette barre défile, c'est que le thread UI n'est pas bloqué." VerticalAlignment="Center"
                       HorizontalAlignment="Center"/>
        </Grid>
        </StackPanel>
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <StackPanel Orientation="Vertical">
                <Button Command="{Binding SynchronousCommand}">1. Exécution synchrone</Button>
                <Button Command="{Binding BackgroundWorkerCommand}">2. BackgroundWorker</Button>
                <Button Command="{Binding DispatcherCommand}">3. Dispatcher</Button>
                <Button Command="{Binding AsyncAwaitSimpleCommand}">4. Exemple simple avec async et await</Button>
                <Button Command="{Binding RunAsynchronouslyCommand}">5. Appeler une méthode synchrone de manière asynchrone</Button>
                <Button Command="{Binding SynchronousAsyncCommand}">6. Appeler une méthode asynchrone qui ne fait pas de traitement asynchrone</Button>
                <Button Command="{Binding WhenAllCommand}">7. Appeler plusieurs tâches en parallèle</Button>
                <Button Command="{Binding WhenAnyCommand}">8. Appeler plusieurs tâches en parallèle et afficher un message dès qu'une se termine</Button>
                <Button Command="{Binding CancelTaskCommand}">9. Lancer une longue tâche et l'annuler</Button>
                <Button Command="{Binding ProgressCommand}">10. Lancer une tâche et voir sa progression</Button>
                <Button Command="{Binding ConfigureAwaitCommand}">11. Utiliser ConfigureAwait(false) pour retourner sur un autre thread</Button>
                <Button Command="{Binding DeadlockCommand}">12. Provoquer un deadlock</Button>
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</Window>
